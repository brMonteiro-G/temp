name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    # keep only for debugging
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      $PRIVATE_KEY: ${{ secrets.EC2_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build, tag and push Image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ufabc-next-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ${{ secrets.PRODUCTION_ENV }} > .env.production
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance and pull the latest image
        run: |
          touch deploy.pem
          echo "$PRIVATE_KEY" > deploy.pem
          ssh -i deploy.pem ec2-user@${{ secrets.EC2_HOST }} 'docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:${{ github.sha }}'
          rm deploy.pem

      - name: SSH into EC2 instance and restart Docker container
        run: |
          touch deploy.pem
          echo "$PRIVATE_KEY" > deploy.pem
          ssh -i deploy.pem ec2-user@${{ secrets.EC2_HOST }} 'docker stop ufabc-next-backend'
          ssh -i deploy.pem ec2-user@${{ secrets.EC2_HOST }} 'docker rm ufabc-next-backend'
          ssh -i deploy.pem ec2-user@${{ secrets.EC2_HOST }} 'docker run -d --name ufabc-next-backend -p 3000:3000 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:${{ github.sha }}'
          rm deploy.pem
