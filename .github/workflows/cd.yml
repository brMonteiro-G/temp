name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ secrets.EC2_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Retrieve AWS Secret
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            staging/next-staging
          # parse-json-secrets: true

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image to ECR
        run: |
          docker build --build-arg ENV_FILE="${{ env }}" -t ufabc-next-backend .
          docker tag ufabc-next-backend:latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:latest

      - name: SSH into EC2 instance and pull the latest image
        run: |
          echo "$SSH_KEY" > pipeline.pem
          chmod 400 pipeline.pem
          ssh -o StrictHostKeyChecking=no -i pipeline.pem ec2-user@ec2-3-90-140-60.compute-1.amazonaws.com 'docker pull ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:latest'
          rm pipeline.pem

      - name: SSH into EC2 instance and restart Docker container
        run: |
          echo "$SSH_KEY" > pipeline.pem
          chmod 400 pipeline.pem
          ssh -o StrictHostKeyChecking=no -i pipeline.pem ec2-user@ec2-3-90-140-60.compute-1.amazonaws.com 'docker stop ufabc-next-backend'
          ssh -o StrictHostKeyChecking=no -i pipeline.pem ec2-user@ec2-3-90-140-60.compute-1.amazonaws.com 'docker rm ufabc-next-backend'
          ssh -o StrictHostKeyChecking=no -i pipeline.pem ec2-user@ec2-3-90-140-60.compute-1.amazonaws.com 'docker run -d --name ufabc-next-backend -p ${{ secrets.PORT }}:${{ secrets.PORT }} ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/ufabc-next-backend:latest'
          rm pipeline.pem
