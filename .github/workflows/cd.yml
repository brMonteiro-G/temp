name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Retrieve AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            staging/next-staging
          # parse-json-secrets: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Build, tag and push Image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ufabc-next-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2 Instance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cat ~/.ssh/id_rsa
            # # Connect to the EC2 instance and pull the Docker image
            # ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            # ssh -o "StrictHostKeyChecking=no" ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker pull ${{secrets.EC2_REGISTRY}}/ufabc-next-backend:latest"

            # # Stop and remove any existing containers running the same image
            # ssh -o "StrictHostKeyChecking=no" ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker stop ufabc-next-backend"
            # ssh -o "StrictHostKeyChecking=no" ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker rm ufabc-next-backend"

            # # Start a new container with the updated image
            # ssh -o "StrictHostKeyChecking=no" ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker run -d --name ufabc-next-backend -p ${{ secrets.PORT }}:${{ secrets.PORT }} ufabc-next-backend:latest"
